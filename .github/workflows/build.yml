name: Build FFmpeg for Android
on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [armeabi-v7a, arm64-v8a, x86, x86_64]
    timeout-minutes: 60  # Vaqt chegarasini oshirish
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache NDK
        uses: actions/cache@v3
        with:
          path: ~/android-ndk
          key: ndk-r27-${{ runner.os }}-${{ hashFiles('**/ndk-version') }}
          restore-keys: |
            ndk-r27-${{ runner.os }}-

      - name: Setup NDK (r27)
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r27
          ndk-release-channel: stable
          add-to-path: true
          link-to-sdk: false
          local-cache: true

      - name: Verify NDK setup
        run: |
          if [ -d "$ANDROID_NDK_HOME" ]; then
            echo "NDK setup successful at $ANDROID_NDK_HOME"
            echo "NDK version: $(cat $ANDROID_NDK_HOME/source.properties | grep -i 'Pkg.Revision' | cut -d'=' -f2)"
            if [[ "$(cat $ANDROID_NDK_HOME/source.properties | grep -i 'Pkg.Revision' | cut -d'=' -f2)" != "27"* ]]; then
              echo "Warning: Expected NDK r27, but found a different version!"
              exit 1
            fi
          else
            echo "NDK setup failed!"
            exit 1
          fi

      - name: Install dependencies (NASM for x86)
        run: |
          sudo apt-get update
          sudo apt-get install -y nasm

      - name: Verify FFmpeg source
        run: |
          if [ ! -f configure ]; then
            echo "configure file not found in root directory!"
            ls -la
            exit 1
          fi
          echo "FFmpeg source verified successfully."

      - name: Build FFmpeg
        run: |
          echo "Building for ${{ matrix.arch }}"
          case ${{ matrix.arch }} in
            "armeabi-v7a")
              CPU=armv7-a
              CROSS_PREFIX=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi-
              CC=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/armv7a-linux-androideabi21-clang
              NM=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-nm
              ;;
            "arm64-v8a")
              CPU=armv8-a
              CROSS_PREFIX=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android-
              CC=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android21-clang
              NM=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-nm
              ;;
            "x86")
              CPU=i686
              CROSS_PREFIX=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android-
              CC=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/i686-linux-android21-clang
              NM=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-nm
              ;;
            "x86_64")
              CPU=x86_64
              CROSS_PREFIX=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android-
              CC=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/x86_64-linux-android23-clang
              NM=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-nm
              ;;
          esac

          ./configure \
            --target-os=android \
            --arch=${{ matrix.arch }} \
            --cpu=$CPU \
            --enable-cross-compile \
            --cross-prefix=$CROSS_PREFIX \
            --cc=$CC \
            --nm=$NM \
            --sysroot=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/sysroot \
            --extra-cflags="-march=$CPU -fPIC -D__ANDROID_API__=21" \
            --prefix=../output/${{ matrix.arch }} \
            --enable-shared \
            --disable-static \
            --disable-doc \
            --disable-programs \
            --disable-everything \
            --enable-avcodec \
            --enable-avformat \
            --enable-avutil \
            --enable-swscale \
            --enable-swresample \
            --enable-decoder=h264 \
            --enable-decoder=mp3 \
            --enable-demuxer=mp4 \
            --enable-demuxer=mp3 || { echo "Configure failed"; cat config.log; exit 1; }

          make -j2  # Parallel jarayonlarni kamaytirish
          mkdir -p ../output/${{ matrix.arch }}/lib
          make install || { echo "Make install failed"; cat config.log; exit 1; }

      - name: Check build output
        run: |
          if [ -d "../output/${{ matrix.arch }}/lib" ]; then
            ls -la ../output/${{ matrix.arch }}/lib
            echo "Build successful for ${{ matrix.arch }}"
          else
            echo "Build failed: output directory not found!"
            exit 1
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with: 
          name: ffmpeg-${{ matrix.arch }}
          path: ../output/${{ matrix.arch }}/lib/
