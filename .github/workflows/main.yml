name: Build FFmpeg for Android

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # Ish vaqtini 6 soatgacha oshirish
    strategy:
      matrix:
        arch: [arm64-v8a, armeabi-v7a, x86, x86_64]  # Arxitekturalar ro'yxati

    steps:
      - name: Repozitoriyani yuklash
        uses: actions/checkout@v3

      - name: NDK keshini tekshirish
        id: ndk-cache
        uses: actions/cache@v3
        with:
          path: ~/android-ndk-r26b
          key: ndk-r26b-${{ runner.os }}

      - name: Android NDK'ni o'rnatish
        if: steps.ndk-cache.outputs.cache-hit != 'true'
        run: |
          wget https://dl.google.com/android/repository/android-ndk-r26b-linux.zip
          unzip android-ndk-r26b-linux.zip -d ~/
          rm android-ndk-r26b-linux.zip

      - name: NASM va YASM o'rnatish
        run: |
          sudo apt-get update
          sudo apt-get install -y nasm yasm

      - name: Vulkan header-larni o'rnatish
        run: |
          sudo apt-get update
          sudo apt-get install -y libvulkan-dev

      - name: FFmpeg manba kodini yuklab olish
        run: |
          git clone --depth=1 https://github.com/FFmpeg/FFmpeg.git ffmpeg
          cd ffmpeg
          git fetch --tags
          git checkout n5.1.2  # Ma'lum bir versiyani tanlash

      - name: FFmpegni qurish (${{ matrix.arch }})
        run: |
          export NDK_HOME=~/android-ndk-r26b
          export TOOLCHAIN=$NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64
          export API=21  # Minimal Android API versiyasi

          echo "Qurish jarayoni boshlandi (${{ matrix.arch }})"
          mkdir -p output/${{ matrix.arch }}
          cd ffmpeg

          # Arxitektura uchun to'g'ri clang yo'nalishini aniqlash
          if [ "${{ matrix.arch }}" = "arm64-v8a" ]; then
            CLANG_PREFIX=aarch64-linux-android
          elif [ "${{ matrix.arch }}" = "armeabi-v7a" ]; then
            CLANG_PREFIX=armv7a-linux-androideabi
          elif [ "${{ matrix.arch }}" = "x86" ]; then
            CLANG_PREFIX=i686-linux-android
          elif [ "${{ matrix.arch }}" = "x86_64" ]; then
            CLANG_PREFIX=x86_64-linux-android
          else
            echo "Noma'lum arxitektura: ${{ matrix.arch }}"
            exit 1
          fi

          CLANG_PATH=$TOOLCHAIN/bin/${CLANG_PREFIX}${API}-clang
          if [ ! -f "$CLANG_PATH" ]; then
            echo "Xatolik: $CLANG_PATH topilmadi!"
            exit 1
          fi

          ./configure \
            --arch=${{ matrix.arch }} \
            --target-os=android \
            --enable-cross-compile \
            --sysroot=$TOOLCHAIN/sysroot \
            --cc=$CLANG_PATH \
            --cxx=$TOOLCHAIN/bin/${CLANG_PREFIX}${API}-clang++ \
            --prefix=$(pwd)/../output/${{ matrix.arch }} \
            --disable-static \
            --enable-shared \
            --disable-x86asm \
            --disable-vulkan  # Vulkan qo'llab-quvvatlashni o'chirish
          make -j$(nproc)
          make install
          echo "${{ matrix.arch }} uchun qurish tugadi."

      - name: Konfiguratsiya log'ini yuklash
        uses: actions/upload-artifact@v4
        with:
          name: config-log
          path: ffmpeg/ffbuild/config.log

      - name: Kutubxonalarni yuklash
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-${{ matrix.arch }}
          path: output/${{ matrix.arch }}/lib/*.so
